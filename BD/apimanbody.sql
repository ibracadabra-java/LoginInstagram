--------------------------------------------------------
-- Archivo creado  - lunes-noviembre-23-2020   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Package Body PKG_API_MANT
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "APIINST"."PKG_API_MANT" AS
PROCEDURE PRC_TAREA_INSERTAR (
X_ID_TIPO IN apiinst.tareas.ID_TIPO_TAREA%TYPE,
X_USER IN apiinst.mlogin.USUARIO%TYPE,
X_VEL IN apiinst.methodlike.VELOCIDAD%TYPE,
X_CANT IN apiinst.mlikemanypost.CANTLIKE%TYPE,
X_USERLIST IN apiinst.methodlike.USUARIOS%TYPE,
X_ERROR OUT SYS_REFCURSOR
)
IS
X_ID_TAREA NUMBER;
X_ID_METHODLIKE NUMBER;
X_ID_MLIKE NUMBER;
X_ERROR_DESC VARCHAR2(300);
BEGIN
BEGIN
X_ID_TAREA := SE_ID_TAREAS.NEXTVAL;
X_ID_METHODLIKE := SE_ID_METHOLIKE.nextval;
X_ID_MLIKE := SE_ID_MLIKE.nextval;
INSERT INTO TAREAS
(
ID_TAREA,
ID_TIPO_TAREA,
ESTADO
)
VALUES 
(
X_ID_TAREA,
X_ID_TIPO,
2
);
INSERT INTO mlikemanypost
(
id_mlike,
cantlike,
id_mlogin
)
VALUES 
(
X_ID_MLIKE,
X_CANT,
(SELECT ID_MLOGIN FROM MLOGIN WHERE USUARIO = X_USER)
);
INSERT INTO methodlike
(
ID_METHODLIKE,
VELOCIDAD,
MLIKE,
ID_TAREA,
USUARIOS
)
VALUES 
(
X_ID_METHODLIKE,
X_VEL,
X_ID_MLIKE,
X_ID_TAREA,
X_USERLIST
);

OPEN X_ERROR FOR
        SELECT TO_CHAR(X_ID_TAREA) AS "VALOR", 0 AS "ID_TIPO", '0' AS "ID_ERROR", '' AS "DES_ERROR"
        FROM DUAL;
EXCEPTION WHEN OTHERS THEN

OPEN X_ERROR FOR
      SELECT X_ERROR_DESC AS "VALOR", 1 AS "ID_TIPO", '1' AS "ID_ERROR", 'OCURRIO UN ERROR NO CONTROLADO' AS "DES_ERROR", '' AS "VALOR1"
      FROM DUAL;
END;
END PRC_TAREA_INSERTAR;

--Procedimiento para Insetar Valores en la Tabla Reportes_Mensajes(REPORT_MESS)
PROCEDURE PRC_INSERT_REPORT_MESS (
X_THREAD_ID IN apiinst.report_mess.THREAD_ID%TYPE,
X_ITEM_ID IN apiinst.report_mess.ITEM_ID%TYPE,
X_CLIENTE_ID IN apiinst.report_mess.CLIENTE_ID%TYPE,
X_CANT_TOTAL IN apiinst.report_mess.CANT_TOTAL%TYPE,
X_CANT_ENV IN apiinst.report_mess.CANT_ENV%TYPE,
X_LIST_IDS IN apiinst.report_mess.LIST_IDS%TYPE,
X_ERROR OUT SYS_REFCURSOR
)
IS
X_ERROR_DESC VARCHAR2(300);

BEGIN
BEGIN
INSERT INTO REPORT_MESS
(
THREAD_ID,
ITEM_ID,
CLIENTE_ID,
CANT_TOTAL,
CANT_ENV,
LIST_IDS
)
VALUES 
(
X_THREAD_ID,
X_ITEM_ID,
X_CLIENTE_ID,
X_CANT_TOTAL,
X_CANT_ENV,
X_LIST_IDS
);

OPEN X_ERROR FOR
        SELECT TO_CHAR(X_THREAD_ID) AS "VALOR", 0 AS "ID_TIPO", '0' AS "ID_ERROR", '' AS "DES_ERROR"
        FROM DUAL;
EXCEPTION WHEN OTHERS THEN

OPEN X_ERROR FOR
      SELECT X_ERROR_DESC AS "VALOR", 1 AS "ID_TIPO", '1' AS "ID_ERROR", 'OCURRIO UN ERROR NO CONTROLADO' AS "DES_ERROR", '' AS "VALOR1"
      FROM DUAL;
END;

END PRC_INSERT_REPORT_MESS;



--Procedimiento para Actualizar los Valores en la Tabla Reportes_Mensajes(REPORT_MESS)
PROCEDURE PRC_UPDATE_REPORT_MESS (
X_THREAD_ID IN apiinst.report_mess.THREAD_ID%TYPE,
X_CLIENTE_ID IN apiinst.report_mess.CLIENTE_ID%TYPE,
X_CANT_VISTOS IN apiinst.report_mess.CANT_VISTOS%TYPE,
X_CANT_REACC IN apiinst.report_mess.CANT_REACC%TYPE,
X_ERROR OUT SYS_REFCURSOR
)
IS
X_ERROR_DESC VARCHAR2(300);

BEGIN
BEGIN
UPDATE REPORT_MESS
SET 
CANT_VISTOS = X_CANT_VISTOS,
CANT_REACC = X_CANT_REACC
WHERE THREAD_ID = X_THREAD_ID AND CLIENTE_ID = X_CLIENTE_ID;

OPEN X_ERROR FOR
        SELECT TO_CHAR(X_THREAD_ID) AS "VALOR", 0 AS "ID_TIPO", '0' AS "ID_ERROR", '' AS "DES_ERROR"
        FROM DUAL;
EXCEPTION WHEN OTHERS THEN

OPEN X_ERROR FOR
      SELECT X_ERROR_DESC AS "VALOR", 1 AS "ID_TIPO", '1' AS "ID_ERROR", 'OCURRIO UN ERROR NO CONTROLADO' AS "DES_ERROR", '' AS "VALOR1"
      FROM DUAL;
END;

END PRC_UPDATE_REPORT_MESS;

--Procedimiento para insertar la tarea de purificar cuentas
PROCEDURE PRC_PURIFICADOR_INSERTAR
(X_USUARIO IN apiinst.purificador.USUARIO%TYPE,
X_USUARIOS IN apiinst.purificador.USUARIOS%TYPE,
X_ID_TIPO IN apiinst.tareas.ID_TIPO_TAREA%TYPE,
X_ERROR OUT SYS_REFCURSOR
)
IS
X_ID_TAREA NUMBER;
X_ID_PURIFICADOR NUMBER;
X_ERROR_DESC VARCHAR2(300);
BEGIN
BEGIN
X_ID_TAREA := SE_ID_TAREAS.NEXTVAL;
X_ID_PURIFICADOR := APIINST.SE_ID_PURIFICADOR.NEXTVAL;
INSERT INTO TAREAS
(
ID_TAREA,
ID_TIPO_TAREA,
ESTADO
)
VALUES 
(
X_ID_TAREA,
X_ID_TIPO,
2
);
INSERT INTO PURIFICADOR
(
ID_PURIFICADOR,
USUARIO,
USUARIOS,
ID_USUARIO,
ID_TAREA
)VALUES
(
X_ID_PURIFICADOR,
X_USUARIO,
X_USUARIOS,
(SELECT ID_MLOGIN FROM MLOGIN WHERE USUARIO = X_USUARIO),
X_ID_TAREA
);
OPEN X_ERROR FOR
SELECT TO_CHAR(X_ID_PURIFICADOR) AS "VALOR", 0 AS "ID_TIPO", '0' AS "ID_ERROR", '' AS "DES_ERROR"
        FROM DUAL;
EXCEPTION WHEN OTHERS THEN

OPEN X_ERROR FOR
      SELECT X_ERROR_DESC AS "VALOR", 1 AS "ID_TIPO", '1' AS "ID_ERROR", 'OCURRIO UN ERROR NO CONTROLADO' AS "DES_ERROR", '' AS "VALOR1"
      FROM DUAL;
      END;
      END PRC_PURIFICADOR_INSERTAR;
      
PROCEDURE PRC_MASSENDING_INSERTAR(
X_IDMLOGIN IN apiinst.massending.IDMLOGIN%TYPE,
X_USUARIOS IN apiinst.massending.USUARIOS%TYPE,
X_TEXTO IN apiinst.massending.TEXTO%TYPE,
X_ID_TIPO IN apiinst.tareas.ID_TIPO_TAREA%TYPE,
X_ERROR OUT SYS_REFCURSOR
)
IS
X_ID_TAREA NUMBER;
X_IDMASSENDING NUMBER;
X_ERROR_DESC VARCHAR2(300);
BEGIN
BEGIN
X_ID_TAREA := APIINST.SE_ID_TAREAS.NEXTVAL;
X_IDMASSENDING := APIINST.SE_IDMASENDING.NEXTVAL;
INSERT INTO TAREAS
(
ID_TAREA,
ID_TIPO_TAREA,
ESTADO
)
VALUES 
(
X_ID_TAREA,
X_ID_TIPO,
2
);
INSERT INTO MASSENDING
(
IDMASSENDING,
IDMLOGIN,
USUARIOS,
TEXTO,
IDTAREA
)
VALUES(
X_IDMASSENDING,
X_IDMLOGIN,
X_USUARIOS,
X_TEXTO,
X_ID_TAREA
);

OPEN X_ERROR FOR
        SELECT TO_CHAR(X_IDMASSENDING) AS "VALOR", 0 AS "ID_TIPO", '0' AS "ID_ERROR", '' AS "DES_ERROR"
        FROM DUAL;
EXCEPTION WHEN OTHERS THEN

OPEN X_ERROR FOR
      SELECT X_ERROR_DESC AS "VALOR", 1 AS "ID_TIPO", '1' AS "ID_ERROR", 'OCURRIO UN ERROR NO CONTROLADO' AS "DES_ERROR", '' AS "VALOR1"
      FROM DUAL;
END;

END PRC_MASSENDING_INSERTAR;
END PKG_API_MANT;

/
